/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.*;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Mazen
 */
public class NewsFeed extends javax.swing.JFrame {
    private UserContentDatabase userContentDatabase = new UserContentDatabase("src/database/UserContents.json");
    private ProfileDataBase profileDataBase = new ProfileDataBase("src/database/Profile.json");
    private ArrayList<Content> contents = new ArrayList<>(); //posts
    private String id;
    /**
     * Creates new form NewsFeed
     */
    public NewsFeed(String id) throws IOException {
        //this.user = new LoginDatabase() ;
        this.id=id;
        initComponents();
        setTitle("NewsFeed");
        setLocationRelativeTo(null);
        setResizable(false);
        setSize(1000, 700);
        setVisible(true);
        FriendListPannel friendPanel = new FriendListPannel(id);
        friendsScroll.setViewportView(friendPanel);

        for (int i = 0; i < 1000; i++) {
            Content n = ContentFactory.createContent("post", i, LocalDateTime.MAX);
            n.setContent("content" + i);
            n.setAuthorId(i);
            if (i % 2 == 0) {
                contents.add(n);
            } else {
                n.setImage("src/database/Signup.png");
                contents.add(n);
            }
        }

        JPanel postPanel = new JPanel();
        postPanel.setLayout(new BoxLayout(postPanel, BoxLayout.Y_AXIS));

        for (Content post : contents) {
            JLabel contentLabel = new JLabel("Content: " + post.getContent());
            JLabel authorLabel = new JLabel("Author ID: " + post.getAuthorId());
            JLabel imageLabel = new JLabel(new ImageIcon(post.getImage()));
            postPanel.add(authorLabel);
            postPanel.add(contentLabel);
            postPanel.add(imageLabel);
            postPanel.add(Box.createRigidArea(new Dimension(0, 10))); // Add spacing between posts
        }

        JPanel storiesPanel = new JPanel();
        storiesPanel.setLayout(new BoxLayout(storiesPanel, BoxLayout.X_AXIS));

        for (Content post : contents) {
            ImageIcon storyThumbnail = new ImageIcon(post.getImage());
            StoryFrontend storyFrontend = new StoryFrontend(post.getAuthorId(), "User" + post.getAuthorId(), storyThumbnail);
            storiesPanel.add(storyFrontend);
            storiesPanel.add(Box.createRigidArea(new Dimension(0, 10))); // Add spacing between stories
        }

//        FriendSuggestionPannel friendSuggestionPannel = new FriendSuggestionPannel(id);
//        suggestionsScroll.setViewportView(friendSuggestionPannel);

        FriendSuggestionFrontEnd friendSuggestionFrontend = new FriendSuggestionFrontEnd(id);
        suggestionsScroll.setViewportView(friendSuggestionFrontend);


        postsScroll.getVerticalScrollBar().setUnitIncrement(20);
        storiesScrollable.setViewportView(storiesPanel);
        postsScroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        postsScroll.setViewportView(postPanel);

        revalidate();
        repaint();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() throws IOException {
        User user= null;
        try {
            user = userContentDatabase.getUser(id);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        OptionsMenu = new javax.swing.JInternalFrame(user.getUsername());
        storiesScrollable = new javax.swing.JScrollPane();
        createPostButton = new javax.swing.JButton();
        friendsScroll = new javax.swing.JScrollPane();
        postsScroll = new javax.swing.JScrollPane();
        suggestionsScroll = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddStoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        JMenuBar mb = new JMenuBar();
        JMenu om = new JMenu("Options");
        JMenuItem ref = new JMenuItem("Refresh page");

        ref.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                //refreshPage();
            }
        });

        JMenuItem logoutItem = new JMenuItem("Logout");
        logoutItem.addActionListener(new ActionListener() {
            User us=userContentDatabase.getUser(id);
            public void actionPerformed(ActionEvent e) {
                try {
                    userContentDatabase.getUser(id).setStatus("offline");
                    userContentDatabase.modifyUserById(us);
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
                setVisible(false);
                new WelcomePage().setVisible(true);
            }
        });
        JMenuItem friendRequests = new JMenuItem("Friend Requests");
        friendRequests.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    new FriendRequestPage(id);
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
            }
        });

        om.add(ref);
        om.add(logoutItem);
        om.add(friendRequests);
        mb.add(om);
        OptionsMenu.setJMenuBar(mb);
        if(user!=null&&user.getProfile().getProfilePhoto()!=null){
        OptionsMenu.setFrameIcon(new ImageIcon(user.getProfile().getProfilePhoto()));
        OptionsMenu.setSize(400, 300);
        }
        OptionsMenu.setVisible(true);

        javax.swing.GroupLayout OptionsMenuLayout = new javax.swing.GroupLayout(OptionsMenu.getContentPane());
        OptionsMenu.getContentPane().setLayout(OptionsMenuLayout);
        OptionsMenuLayout.setHorizontalGroup(
            OptionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 141, Short.MAX_VALUE)
        );
        OptionsMenuLayout.setVerticalGroup(
            OptionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        createPostButton.setText("Create Post");
        createPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPostButtonActionPerformed(evt);
            }
        });

        for (backend.Content content : contents) {
            Post post = new Post(content.getContentId(), content.getContent(), "Author" + content.getContent(),content.getImage());
            postsScroll.add(post);
            postsScroll.add(Box.createRigidArea(new Dimension(0, 10))); // Add spacing between posts
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Stories");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Posts");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Suggestions");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Friends");

        AddStoryButton.setText("Add Story");
        AddStoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(storiesScrollable)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(OptionsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(suggestionsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(postsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(friendsScroll))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(100, 100, 100)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(77, 77, 77))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(createPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(AddStoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 309, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(405, 405, 405)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OptionsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storiesScrollable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createPostButton)
                    .addComponent(AddStoryButton))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(postsScroll)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(friendsScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(suggestionsScroll)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPostButtonActionPerformed
          new CreatePostPage(id);
          
    }//GEN-LAST:event_createPostButtonActionPerformed

    private void AddStoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStoryButtonActionPerformed
        new CreateStoryPage(id);
    }//GEN-LAST:event_AddStoryButtonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddStoryButton;
    private javax.swing.JInternalFrame OptionsMenu;
    private javax.swing.JButton createPostButton;
    private javax.swing.JScrollPane friendsScroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane postsScroll;
    private javax.swing.JScrollPane storiesScrollable;
    private javax.swing.JScrollPane suggestionsScroll;
    // End of variables declaration//GEN-END:variables
}
